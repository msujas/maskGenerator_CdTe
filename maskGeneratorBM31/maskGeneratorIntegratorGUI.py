# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'guiLayout.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
if __name__ == '__main__':
    import maskGeneratorIntegraterCdTe
else:
    from . import maskGeneratorIntegraterCdTe
from PyQt6 import QtCore, QtGui, QtWidgets
import os


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(625, 331)
        MainWindow.setWindowTitle("imagin")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.configFile = f'{os.path.dirname(os.path.realpath(__file__))}/guiConfig.log'

        self.directoryBox = QtWidgets.QLineEdit(self.centralwidget)
        self.directoryBox.setGeometry(QtCore.QRect(10, 20, 431, 20))
        self.directoryBox.setObjectName("directoryBox")

        self.dirButton = QtWidgets.QPushButton(self.centralwidget)
        self.dirButton.setGeometry(QtCore.QRect(450, 20, 21, 21))
        self.dirButton.setObjectName("dirButton")
        self.dirButton.setText("...")

        self.poniBox = QtWidgets.QLineEdit(self.centralwidget)
        self.poniBox.setGeometry(QtCore.QRect(10, 60, 431, 20))
        self.poniBox.setObjectName("poniBox")

        self.maskBox = QtWidgets.QLineEdit(self.centralwidget)
        self.maskBox.setGeometry(QtCore.QRect(10, 100, 431, 20))
        self.maskBox.setObjectName("maskBox")

        self.gainMapBox = QtWidgets.QLineEdit(self.centralwidget)
        self.gainMapBox.setGeometry(QtCore.QRect(10, 140, 431, 20))
        self.gainMapBox.setObjectName("gainMapBox")
        self.runButton = QtWidgets.QPushButton(self.centralwidget)
        self.runButton.setGeometry(QtCore.QRect(420, 230, 75, 23))
        self.runButton.setObjectName("runButton")
        self.runButton.setText("Run")

        self.maskButton = QtWidgets.QPushButton(self.centralwidget)
        self.maskButton.setGeometry(QtCore.QRect(450, 100, 21, 21))
        self.maskButton.setObjectName("maskButton")
        self.maskButton.setText("...")

        self.poniButton = QtWidgets.QPushButton(self.centralwidget)
        self.poniButton.setGeometry(QtCore.QRect(450, 60, 21, 21))
        self.poniButton.setObjectName("poniButton")
        self.poniButton.setText("...")
        
        self.gainMapButton = QtWidgets.QPushButton(self.centralwidget)
        self.gainMapButton.setGeometry(QtCore.QRect(450, 140, 21, 21))
        self.gainMapButton.setObjectName("gainMapButton")
        self.gainMapButton.setText("...")

        self.dirLabel = QtWidgets.QLabel(self.centralwidget)
        self.dirLabel.setGeometry(QtCore.QRect(480, 20, 47, 13))
        self.dirLabel.setObjectName("dirLabel")
        self.dirLabel.setText( "directory")

        self.poniLabel = QtWidgets.QLabel(self.centralwidget)
        self.poniLabel.setGeometry(QtCore.QRect(480, 60, 47, 13))
        self.poniLabel.setObjectName("poniLabel")
        self.poniLabel.setText( "poni file")

        self.maskLabel = QtWidgets.QLabel(self.centralwidget)
        self.maskLabel.setGeometry(QtCore.QRect(480, 100, 47, 13))
        self.maskLabel.setObjectName("maskLabel")
        self.maskLabel.setText( "mask file")

        self.gainLabel = QtWidgets.QLabel(self.centralwidget)
        self.gainLabel.setGeometry(QtCore.QRect(480, 140, 71, 16))
        self.gainLabel.setObjectName("gainLabel")
        self.gainLabel.setText( "gain map file")        

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 625, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)     
        self.updateConfig()
        if os.path.exists(self.configFile):
            self.readConfigFile() 

        self.dirButton.clicked.connect(self.selectFolder)
        self.poniButton.clicked.connect(self.selectPoni)
        self.maskButton.clicked.connect(self.selectMask)
        self.gainMapButton.clicked.connect(self.selectGainFile)
        self.runButton.clicked.connect(self.run)

    def retranslateUi(self, MainWindow):

        _translate = QtCore.QCoreApplication.translate

    def selectFolder(self):
        if self.directoryBox.text():
            currentdir = self.directoryBox.text()
        else:
            currentdir = '.'
        dialog = QtWidgets.QFileDialog.getExistingDirectory(caption = 'select folder', directory=currentdir)
        if dialog:
            self.directoryBox.setText(dialog)
            self.updateConfigFile()
    def selectPoni(self):
        if self.poniBox.text():
            currentdir = os.path.dirname(self.poniBox.text())
        else:
            currentdir = '.'
        filter = "data file (*.poni)"
        dialog = QtWidgets.QFileDialog.getOpenFileName(caption = 'select poni file',filter = filter, directory=currentdir)
        if dialog[0]:
            self.poniBox.setText(dialog[0])
            self.updateConfigFile()

    def selectMask(self):
        if self.maskBox.text():
            currentdir = os.path.dirname(self.maskBox.text())
        else:
            currentdir = '.'
        filter = "data file (*.edf)"
        dialog = QtWidgets.QFileDialog.getOpenFileName(caption = 'select mask file',	filter = filter, directory=currentdir)
        if dialog[0]:
            self.maskBox.setText(dialog[0])
            self.updateConfigFile()

    def selectGainFile(self):
        if self.gainMapBox.text():
            currentdir = os.path.dirname(self.gainMapBox.text())
        else:
            currentdir = '.'
        filter = "data file (*.edf)"
        dialog = QtWidgets.QFileDialog.getOpenFileName(caption = 'select gain map file',	filter = filter, directory=currentdir)
        if dialog[0]:
            self.gainMapBox.setText(dialog[0])
            self.updateConfig()
            self.updateConfigFile()

    def updateConfig(self):
        self.configDct = {self.directoryBox.objectName() :[ self.directoryBox , self.directoryBox.text()],
                     self.poniBox.objectName(): [self.poniBox, self.poniBox.text()],
                     self.maskBox.objectName(): [self.maskBox, self.maskBox.text()],
                     self.gainMapBox.objectName(): [self.gainMapBox,self.gainMapBox.text()]}
        
    def updateConfigFile(self):
        self.updateConfig()
        string = ''
        for item in self.configDct:
            string += f'{item};{self.configDct[item][1]}\n'
        f = open(self.configFile,'w')
        f.write(string)
        f.close()

    def readConfigFile(self):
        f=open(self.configFile,'r')
        lines = f.readlines()
        f.close()
        for line in lines:
            line = line.replace('\n','')
            if not line:
                continue
            linesplit = line.split(';')
            self.configDct[linesplit[0]][0].setText(linesplit[1])
        self.updateConfig()
    
    def run(self):
        direc = self.directoryBox.text()
        dest = direc
        poni = self.poniBox.text()
        mask = self.maskBox.text()
        gainFile = self.gainMapBox.text()
        if not direc:
            print('input directory')
            return
        if not poni:
            print('input poni')
            return
        if not mask:
            print('input mask')
            return
        if not gainFile:
            print('input gain file')
            return
        try:
            maskGeneratorIntegraterCdTe.run(direc,dest,poni,mask,gainFile)
            print('finished')
        except IndexError:
            print('no valid files')
            return

            
def main():
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())

if __name__ == "__main__":
    main()
